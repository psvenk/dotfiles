#!/bin/bash

orange="$(tput setaf 3)"
cyan="$(tput setaf 6)"
green="$(tput setaf 2)"
red="$(tput setaf 1)"
reset="$(tput sgr0)"

prompt="[\[${orange}\]\u@\h\[${cyan}\] \w\[${reset}\]]"

if [ "$(id -ru)" -ne 0 ]
then
	prompt="${prompt}\[${green}\]"
else
	prompt="${prompt}\[${red}\]"
fi

prompt="${prompt}\$\[${reset}\]"
printf '%s' "$prompt"

# Print newline if path is long, acting as a heuristic for a long prompt.
# This, of course, is not perfect; however, to get the length of the actual
# prompt, we would need to preemptively substitute the username, hostname, etc.
# into the $prompt, which may have performance issues.
if [ ${#PWD} -gt 32 ]
then
	printf '%s' '\n'
else
	printf '%s' ' '
fi

# Make input light gray and output white (also see ~/bin/prompt-command)
# https://wiki.archlinux.org/index.php?title=Bash/Prompt_customization&oldid=655849#Escapes_between_command_input_and_output
# https://stromberg.dnsalias.org/~strombrg/PS0-prompt/
tput setaf 7
