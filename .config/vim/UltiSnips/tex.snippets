priority 1

global !p
import tex

def include_screenshot():
    output = f"SCREENSHOT {tex.include_screenshot()} SCREENSHOT"
    snip.buffer[snip.line] = (output)
    snip.cursor.set(snip.line, len(output))

endglobal

# General {{{

snippet begin "\begin{} / \end{}" i
\begin{$1}
	$2
\end{$1}
endsnippet

snippet "tab(ular)?" "tabular" r
\begin{${1:tabular}}{$2}
	$3
\end{$1}
endsnippet

snippet " "TeX double quotes" i
\`\`$1''
endsnippet

snippet ` "TeX single quotes" i
\`$1'
endsnippet

snippet $ "TeX math mode" i
\$$1\$
endsnippet

snippet \[ "LaTeX display math" i
\[ $1 \]
endsnippet

snippet "v(ec)?" "Vector" ir
\vec{$1}
endsnippet

snippet / "Fraction" i
\frac{$1}{$2}
endsnippet

priority 2

snippet d/ "Display fraction" i
\dfrac{$1}{$2}
endsnippet

snippet t/ "Text fraction" i
\tfrac{$1}{$2}
endsnippet

priority 1

snippet "leg(endre)?" "Legendre symbol" ir
\legendre{$1}{$2}
endsnippet

priority 2

snippet "dleg(endre)?" "Display Legendre symbol" ir
\dlegendre{$1}{$2}
endsnippet

snippet "tleg(endre)?" "Text Legendre symbol" ir
\tlegendre{$1}{$2}
endsnippet

priority 1

snippet "tex(orpdfstring)?" "texorpdfstring" ir
\texorpdfstring{$1}{$2}
endsnippet

# }}}

# Delimiters {{{
snippet lr "left right" i
\left$1 $2 \right$1
endsnippet

snippet llrr "left l_ right r_" i
\left\l$1 $2 \right\r$1
endsnippet

snippet lr( "left( right)" i
\left( $1 \right)
endsnippet

snippet lr[ "\left[ \right]" i
\left[ $1 \right]
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ $1 \right\\}
endsnippet

snippet lra "langle rangle" i
\langle $1 \rangle
endsnippet

snippet lrf "lfloor rfloor" i
\lfloor $1 \rfloor
endsnippet

snippet llrra "langle rangle" i
\left\langle $1 \right\rangle
endsnippet

snippet llrrf "lfloor rfloor" i
\left\lfloor $1 \right\rfloor
endsnippet

snippet \{ "TeX braces" i
\\{ $1 \\}
endsnippet
# }}}

# Symbols {{{
# Greek letters - using same scheme as in $XCOMPOSEFILE {{{
# (excluding those that look like roman letters and do not have TeX commands)
# Lowercase letters {{{
snippet ga "α" i
\alpha
endsnippet
snippet gb "β" i
\beta
endsnippet
snippet gg "γ" i
\gamma
endsnippet
snippet gd "δ" i
\delta
endsnippet
snippet ge "ε" i
\varepsilon
endsnippet
snippet gz "ζ" i
\zeta
endsnippet
snippet gh "η" i
\eta
endsnippet
snippet gi "ι" i
\iota
endsnippet
snippet gk "κ" i
\kappa
endsnippet
snippet gl "λ" i
\lambda
endsnippet
snippet gm "μ" i
\mu
endsnippet
snippet gn "ν" i
\nu
endsnippet
snippet gp "π" i
\pi
endsnippet
snippet gr "ρ" i
\rho
endsnippet
snippet gs "σ" i
\sigma
endsnippet
snippet gt "τ" i
\tau
endsnippet
snippet gu "υ" i
\upsilon
endsnippet
snippet gf "φ" i
\varphi
endsnippet
snippet gx "χ" i
\chi
endsnippet
snippet go "ω" i
\omega
endsnippet
snippet gqe "ε alt." i
\epsilon
endsnippet
snippet gqf "φ alt." i
\phi
endsnippet
snippet gqt "θ" i
\theta
endsnippet
snippet gqp "ψ" i
\psi
endsnippet
snippet gqs "ς" i
\varsigma
endsnippet
snippet gqx "ξ" i
\xi
endsnippet
# }}}
# Uppercase letters {{{
snippet GG "Γ" i
\Gamma
endsnippet
snippet GD "Δ" i
\Delta
endsnippet
snippet GL "Λ" i
\Lambda
endsnippet
snippet GP "Π" i
\Pi
endsnippet
snippet GS "Σ" i
\Sigma
endsnippet
snippet GU "Υ" i
\Upsilon
endsnippet
snippet GF "Φ" i
\Phi
endsnippet
snippet GO "Ω" i
\Omega
endsnippet
snippet GQT "Θ" i
\Theta
endsnippet
snippet GQX "Ξ" i
\Xi
endsnippet
snippet GQP "Ψ" i
\Psi
endsnippet
# }}}
# }}}

snippet bb "mathbb" i
\mathbb{$1}
endsnippet

# }}}

# Include screenshot using maim
# (see ~/.config/vim/python/tex.py)

# A pre-expand action is used so that tex.include_screenshot is called exactly
# once

pre_expand "include_screenshot()"
snippet "scr(eenshot)?" "Screenshot" r
endsnippet

# Generate \includegraphics for screenshot
snippet "SCREENSHOT (.+) SCREENSHOT" "Screenshot includegraphics" r
\begin{center}
	\includegraphics[${1:scale=0.5}]{`!p snip.rv = match.group(1)`}
\end{center}
$0
endsnippet

# vim: set fdm=marker fdl=0:
